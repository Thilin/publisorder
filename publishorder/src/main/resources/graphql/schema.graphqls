type Order {
    order: ID!
    origin: String!
    total: Float!
    createdAt: String
    items: [Item]!
}

type Item {
    name: String!
    image: String!
    qty: Int!
    cost: Float!
    currency: Currency!
}

input OrderInput {
    origin: String!
    items: [ItemInput]!
}

input ItemInput{
    name: String!
    image: String!
    qty: Int!
    cost: Float!
    currency: Currency!
}

enum Currency {
    BRL
}


type Query{
    dummy: String
}

type Mutation{
    publishPlacedOrderMessage(input: OrderInput): Order
}